enum LoanStatus {
  Pending
  Active
  Revoked
  Recouped
}

enum ExpenseKind {
  LoanRepaid
  LoanCreated
  LoanProvided
  LoanRevoked
  ERC20Transfer
  ERC20Approve
}

type InitializedFactory @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type Stats @entity(immutable: false) {
  id: String!
  contractsCount: BigInt!
  expensesCount: BigInt!
}

type LoanContract @entity(immutable: false) {
  id: Bytes!
  loanContract: Bytes! # address
  borrower: Bytes! # address
  collateralToken: Bytes! # address
  collateralTokenId: BigInt!
  collateralAmount: BigInt!
  loanAmount: BigInt!
  recoupmentAmount: BigInt!
  repaidAmount: BigInt!
  actualRepaid: BigInt!
  feePpm: BigInt!
  status: LoanStatus!
  timestamp: BigInt!
  transactionHash: Bytes!
  expenses: [Expense!]! @derivedFrom(field: "loanContract")
  loanRepaid: LoanRepaid
}

type Expense @entity(immutable: true) {
  id: Bytes!
  from: Bytes
  loanContract: LoanContract!
  transactionHash: Bytes!
  kind: ExpenseKind!
  value: BigInt
  baseFeePerGas: BigInt
  gasLimit: BigInt!
  gasPrice: BigInt! # format to gwei
  gasUsed: BigInt
  cumulativeGasUsed: BigInt
  totalCost: BigInt! # format to ETH
  timestamp: BigInt!
}

type InitializedLoan @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LoanProvided @entity(immutable: true) {
  id: Bytes!
  lender: Bytes!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type LoanPartialyRepaid @entity(immutable: true) {
  id: Bytes!
  loanContract: Bytes!
  repaymentAmount: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type LoanRepaid @entity(immutable: true) {
  id: Bytes!
  loanContract: Bytes!
  repaymentAmount: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type LoanRevoked @entity(immutable: true) {
  id: Bytes!
  loanContract: Bytes!
  timestamp: BigInt!
  transactionHash: Bytes!
}
